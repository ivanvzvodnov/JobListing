{"version":3,"sources":["theme/theme.js","components/Header/index.js","components/SearchBar/index.js","components/Job/JobCard.js","components/Job/NewJobModal.js","firebase/config.js","components/Job/ViewJobModal.js","App.js","index.js"],"names":["createMuiTheme","typography","fontFamily","palette","primary","main","secondary","overrides","MuiDialogActions","root","padding","MuiButton","fontWeight","textTransform","color","outlined","borderRadius","borderColor","MuiSelect","filled","MuiFilledInput","input","height","props","Box","py","bgcolor","Grid","container","justify","item","xs","display","justifyContent","Typography","variant","Button","onClick","openNewJobModal","disableElevation","useStyles","makeStyles","wrapper","backgroundColor","boxShadow","flex","margin","useState","loading","setLoading","type","location","jobSearch","setJobSearch","handleChange","e","persist","oldState","target","name","value","search","a","fetchJobsCustom","classes","p","mt","mb","className","Select","onChange","disableUnderline","MenuItem","disabled","CircularProgress","size","theme","border","transition","cursor","borderLeft","companyName","fontSize","spacing","skillChip","alignItems","title","skills","map","skill","key","direction","differenceInDays","Date","now","postedOn","open","included","initialState","companyUrl","link","description","jobDetails","setJobDetails","handleSubmit","field","length","postJob","closeModal","console","log","Dialog","newJobModal","fullWidth","DialogTitle","IconButton","Close","DialogContent","FilledInput","autoComplete","placeholder","multiline","rows","includes","filter","s","concat","addRemoveSkill","DialogActions","width","firestore","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","info","Object","keys","job","format","component","href","jobs","setJobs","customSearch","setCustomSearch","setNewJobModal","viewJob","setViewJob","fetchJobs","collection","orderBy","get","req","tempJobs","docs","data","id","toDate","where","add","useEffect","ThemeProvider","Header","NewJobModal","ViewJobModal","SearchBar","my","JobCard","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.70353a7c.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst primary = \"#18E1D9\";\r\nconst secondary = \"#0B0B15\";\r\n\r\nexport default createMuiTheme({\r\n  typography: {\r\n    fontFamily: \"Poppins, sans-serif\",\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiDialogActions: {\r\n      root: {\r\n        padding: \"8px 24px 16px 24px\",\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        fontWeight: 600,\r\n        textTransform: \"none\",\r\n        color: secondary,\r\n        padding: \"6px 24px\",\r\n      },\r\n      outlined: {\r\n        borderRadius: \"35px\",\r\n        borderColor: secondary,\r\n        padding: \"6px 20px\",\r\n      },\r\n    },\r\n    MuiSelect: {\r\n      filled: {\r\n        padding: \"15px 0 15px 15px\",\r\n      },\r\n    },\r\n    MuiFilledInput: {\r\n      input: {\r\n        height: \"49px\",\r\n        padding: \"0px 0 0 10px\",\r\n      },\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Box, Button, Grid, Typography } from \"@material-ui/core\";\r\n\r\nexport default (props) => (\r\n    <Box py={10} bgcolor = 'secondary.main' color = 'white'>\r\n        <Grid container justify  = \"center\">\r\n            <Grid item xs = {10}>\r\n                <Box display = 'flex' justifyContent = \"space-between\">\r\n                    <Typography variant = 'h4'>Open Job Listing</Typography>\r\n                    <Button onClick = {props.openNewJobModal} variant = 'contained' color = 'primary' disableElevation>Post a job</Button>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    </Box> \r\n)","import React, { useState } from 'react'\r\nimport { Box, Button, MenuItem, Select, makeStyles, CircularProgress } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: {\r\n        backgroundColor: \"#fff\",\r\n        display: \"flex\",\r\n        boxShadow: \"0px 1px 5px rgba(0, 0, 0, .1)\", \r\n        borderRadius: \"5px\",\r\n        \"& > *\" : {\r\n            height: \"45px\",\r\n            flex: 1,\r\n            margin :\"8px\"\r\n        }\r\n    }\r\n})\r\n\r\nexport default props => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [jobSearch, setJobSearch] = useState({\r\n        type: \"Full time\",\r\n        location: \"Remote\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        e.persist()\r\n        setJobSearch(oldState => ({...oldState, [e.target.name] : e.target.value }))\r\n    }\r\n\r\n    const search = async () => {\r\n        setLoading(true)\r\n        await props.fetchJobsCustom(jobSearch)\r\n        setLoading(false)\r\n    }\r\n\r\n    const classes = useStyles()\r\n    return (\r\n    <Box p = {2} mt = {-5} mb = {2} className = {classes.wrapper}>\r\n        <Select onChange = {handleChange} value = {jobSearch.type} name = \"type\" variant = \"filled\" disableUnderline>\r\n            <MenuItem value = \"Full time\">Full time</MenuItem>\r\n            <MenuItem value = \"Part time\">Part time</MenuItem>\r\n            <MenuItem value = \"Contract\">Contract</MenuItem>\r\n        </Select>\r\n        <Select onChange = {handleChange} value = {jobSearch.location} name = \"location\" variant = \"filled\" disableUnderline>\r\n            <MenuItem value = \"Remote\">Remote</MenuItem>\r\n            <MenuItem value = \"In office\">In office</MenuItem>\r\n        </Select>\r\n        <Button disabled = {loading} onClick = {search} variant = 'contained' color = 'primary' disableElevation>{loading ? <CircularProgress color = \"secondary\" size = {22} /> : \"Find\"}</Button>\r\n    </Box>\r\n)}","import React from 'react'\r\nimport { Box, Grid, Typography, Button, makeStyles } from '@material-ui/core'\r\nimport { differenceInDays } from 'date-fns'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        border: '1px solid #e8e8e8',\r\n        transition: \".3s\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\":{\r\n            boxShadow: '0px 5px 25px rgba(0, 0, 0, .1)',\r\n            borderLeft: '6px solid #4D64E4'\r\n        }\r\n    },\r\n    companyName:{\r\n        fontSize: \"13.5px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: theme.spacing(.75),\r\n        borderRadius: \"5px\",\r\n        display: \"inline-block\",\r\n        fontWeight: \"600\"\r\n    },\r\n    skillChip: {\r\n        margin: theme.spacing(0.5),\r\n        padding: theme.spacing(0.75),\r\n        fontSize: \"14.5px\",\r\n        borderRadius: \"5px\",\r\n        transition: \".3s\",\r\n        cursor: \"pointer\",\r\n        fontWeight: \"600\",\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: \"#fff\"\r\n    }\r\n}))\r\n\r\nexport default props => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Box p = {2} className = {classes.wrapper}>\r\n            <Grid container alignItems = \"center\">\r\n                <Grid item xs>\r\n                    <Typography variant = \"subtitle1\">{props.title}</Typography>\r\n                    <Typography className = {classes.companyName} variant = \"subtitle2\">{props.companyName}</Typography>\r\n                </Grid>\r\n                <Grid item container xs>\r\n                    {props.skills.map(skill => <Grid className = {classes.skillChip} item key = {skill}>{skill}</Grid>)}\r\n                </Grid>\r\n                <Grid item container direction = \"column\" alignItems = \"flex-end\" xs>\r\n                    <Grid item>\r\n                        <Typography variant = \"caption\"> {differenceInDays(Date.now(), props.postedOn)} days ago | {props.type} | {props.location}</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Box mt = {2}>\r\n                            <Button onClick = {props.open} variant = \"outlined\">Check</Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Box, Grid, Button, Select, MenuItem, FilledInput, Dialog, DialogTitle, DialogContent, IconButton, DialogActions, Typography, makeStyles, CircularProgress } from '@material-ui/core'\r\nimport {Close} from '@material-ui/icons'\r\n\r\nconst skills = [\r\n    \"JavaScript\",\r\n    \"React\",\r\n    \"Vue\",\r\n    \"Node\",\r\n    \"Firebase\",\r\n    \"MongoDB\",\r\n    \"SQL\"\r\n]\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    skillChip: {\r\n        margin: theme.spacing(0.5),\r\n        padding: theme.spacing(0.75),\r\n        fontSize: \"14.5px\",\r\n        borderRadius: \"5px\",\r\n        transition: \".3s\",\r\n        cursor: \"pointer\",\r\n        fontWeight: \"600\",\r\n        border: `1px solid ${theme.palette.secondary.main}`,\r\n        color: theme.palette.secondary.main,\r\n        \"&:hover\":{\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color: \"#fff\"\r\n        }\r\n    },\r\n    included: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: \"#fff\"\r\n    }\r\n}))\r\n\r\nconst initialState = {\r\n    title: \"\",\r\n    type: \"Full time\",\r\n    location: \"Remote\",\r\n    companyName: \"\",\r\n    companyUrl: \"\",\r\n    skills: [],\r\n    link: \"\",\r\n    description: \"\"\r\n}\r\n\r\nexport default props => {\r\n\r\n    const [jobDetails, setJobDetails] = useState(initialState)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        e.persist()\r\n        setJobDetails(oldState => ({...oldState, [e.target.name] : e.target.value }))\r\n    }\r\n\r\n    const addRemoveSkill = skill => {\r\n        jobDetails.skills.includes(skill) ? \r\n        setJobDetails(oldState => ({...oldState, skills: oldState.skills.filter(s => s != skill)})) :\r\n        setJobDetails(oldState => ({...oldState, skills: oldState.skills.concat(skill)}))\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        for(const field in jobDetails){\r\n            if(typeof jobDetails[field] === 'string' && !jobDetails[field]) return\r\n        }\r\n        if(!jobDetails.skills.length) return\r\n        setLoading(true)\r\n        await props.postJob(jobDetails)\r\n        closeModal()\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setJobDetails(initialState)\r\n        setLoading(false)\r\n        props.closeModal()\r\n    }\r\n\r\n    const classes = useStyles()\r\n    console.log(jobDetails)\r\n    return(\r\n        <Dialog open={props.newJobModal} fullWidth>\r\n            <DialogTitle>\r\n                <Box display = \"flex\" justifyContent = \"space-between\" alignItems = \"center\">\r\n                    Post Job\r\n                    <IconButton onClick = {closeModal}>\r\n                        <Close />\r\n                    </IconButton>\r\n                </Box>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container spacing = {2}>\r\n                    <Grid item xs={6}>\r\n                        <FilledInput onChange = {handleChange} autoComplete = \"off\" name = \"title\" value = {jobDetails.title} placeholder = \"Job title *\" disableUnderline fullWidth></FilledInput>\r\n                    </Grid>\r\n                    <Grid item xs = {6}>\r\n                        <Select onChange = {handleChange} fullWidth variant = \"filled\" name = \"type\" value = {jobDetails.type} disableUnderline>\r\n                            <MenuItem value = \"Full time\">Full time</MenuItem>\r\n                            <MenuItem value = \"Part time\">Part time</MenuItem>\r\n                            <MenuItem value = \"Contract\">Contract</MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FilledInput onChange = {handleChange} autoComplete = \"off\" name = \"companyName\" value = {jobDetails.companyName} placeholder = \"Company name *\" disableUnderline fullWidth></FilledInput>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FilledInput onChange = {handleChange} autoComplete = \"off\" name = \"companyUrl\" value = {jobDetails.companyUrl} placeholder = \"Company URL *\" disableUnderline fullWidth></FilledInput>\r\n                    </Grid>\r\n                    <Grid item xs = {6}>\r\n                        <Select onChange = {handleChange} fullWidth variant = \"filled\" name = \"location\" value = {jobDetails.location} disableUnderline>\r\n                            <MenuItem value = \"Remote\">Remoute</MenuItem>\r\n                            <MenuItem value = \"In office\">In office</MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FilledInput onChange = {handleChange} autoComplete = \"off\" name = \"link\" value = {jobDetails.link} placeholder = \"Job URL *\" disableUnderline fullWidth></FilledInput>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FilledInput onChange = {handleChange} autoComplete = \"off\" name = \"description\" value = {jobDetails.description} placeholder = \"Job description *\" disableUnderline fullWidth multiline rows = {4}></FilledInput>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box mt = {2}>\r\n                    <Typography>Skills *</Typography>\r\n                    <Box display = \"flex\">\r\n                        {skills.map(skill => <Box onClick = {() => addRemoveSkill(skill)} className = {`${classes.skillChip} ${jobDetails.skills.includes(skill) && classes.included}`} key = {skill}>{skill}</Box>)}\r\n                    </Box>\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Box width = \"100%\" display = \"flex\" justifyContent = \"space-between\" alignItems = \"center\" color = \"red\">\r\n                    <Typography variant = \"caption\">* Required fields</Typography>\r\n                    <Button onClick = {handleSubmit} variant = \"contained\" disableElevation color = \"primary\" disabled = {loading}>{loading ? <CircularProgress color = \"secondary\" size = {22} /> : \"Post job\"}</Button>\r\n                </Box>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import { initializeApp } from \"firebase/app\";\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDBZ5W4gWBh4V4HtwMx508mfpzC0eBpAHo\",\r\n    authDomain: \"job-listing-27049.firebaseapp.com\",\r\n    projectId: \"job-listing-27049\",\r\n    storageBucket: \"job-listing-27049.appspot.com\",\r\n    messagingSenderId: \"1057034029454\",\r\n    appId: \"1:1057034029454:web:57612ac5b516d7365fbcdf\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  const firebase = initializeApp(firebaseConfig);\r\n  const firestore = firebase.firestore()\r\n\r\n  export {firebase, firestore, initializeApp}","import React from 'react'\r\nimport { Box, Grid, Button, Select, MenuItem, FilledInput, Dialog, DialogTitle, DialogContent, IconButton, DialogActions, Typography, makeStyles, CircularProgress } from '@material-ui/core'\r\nimport {Close} from '@material-ui/icons'\r\nimport {format} from 'date-fns'\r\nimport theme from '../../theme/theme'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    info: {\r\n        '& > *': {\r\n            margin: '4px'\r\n        },\r\n    },\r\n    skillChip: {\r\n        margin: theme.spacing(0.5),\r\n        padding: theme.spacing(0.75),\r\n        fontSize: \"14.5px\",\r\n        borderRadius: \"5px\",\r\n        fontWeight: \"600\",\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: \"#fff\"\r\n    }\r\n}))\r\n\r\nexport default props => {\r\n    const classes = useStyles()\r\n    return(\r\n    <Dialog open={!!Object.keys(props.job).length} fullWidth>\r\n        <DialogTitle>\r\n            <Box display = \"flex\" justifyContent = \"space-between\" alignItems = \"center\">\r\n                {props.job.title} @ {props.job.companyName}\r\n                <IconButton onClick = {props.closeModal}>\r\n                    <Close />\r\n                </IconButton>\r\n            </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n            <Box>\r\n                <Box className = {classes.info} display=\"flex\">\r\n                    <Typography variant=\"caption\">Posted on: </Typography>\r\n                    <Typography variant=\"body2\">{props.job.postedOn && format(props.job.postedOn, 'dd/MMM/yyyy hh:mm')}</Typography>\r\n                </Box>\r\n                <Box className = {classes.info} display=\"flex\">\r\n                    <Typography variant=\"caption\">Job type: </Typography>\r\n                    <Typography variant=\"body2\">{props.job.type}</Typography>\r\n                </Box>\r\n                <Box className = {classes.info} display=\"flex\">\r\n                    <Typography variant=\"caption\">Job location: </Typography>\r\n                    <Typography variant=\"body2\">{props.job.location}</Typography>\r\n                </Box>\r\n                <Box className = {classes.info} display=\"flex\">\r\n                    <Typography variant=\"caption\">Job description: </Typography>\r\n                    <Typography variant=\"body2\">{props.job.description}</Typography>\r\n                </Box>\r\n                <Box className = {classes.info} display=\"flex\">\r\n                    <Typography variant=\"caption\">Company name: </Typography>\r\n                    <Typography variant=\"body2\">{props.job.companyName}</Typography>\r\n                </Box>\r\n                <Box className = {classes.info} display=\"flex\">\r\n                    <Typography variant=\"caption\">Company website: </Typography>\r\n                    <Typography variant=\"body2\">{props.job.companyUrl}</Typography>\r\n                </Box>\r\n                <Box className = {classes.info} >\r\n                    <Typography variant=\"caption\">Skills: </Typography>\r\n                    <Grid container alignItems = \"center\">\r\n                        {props.job.skills && \r\n                            props.job.skills.map(skill => (\r\n                            <Grid item key={skill} className = {classes.skillChip}>{skill}</Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Box>\r\n            </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button variant=\"outlined\" component=\"a\" href={props.job.link} target=\"_blank\">Apply</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)}","import React, { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport theme from './theme/theme'\nimport Header from './components/Header/'\nimport SearchBar from \"./components/SearchBar/\";\nimport JobCard from \"./components/Job/JobCard\";\nimport NewJobModal from \"./components/Job/NewJobModal\";\nimport { firestore } from \"./firebase/config\";\nimport {Close} from '@material-ui/icons'\nimport ViewJobModal from \"./components/Job/ViewJobModal\";\n\n\nexport default () => {\n  const [jobs, setJobs] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [customSearch, setCustomSearch] = useState(false)\n  const [newJobModal, setNewJobModal] = useState(false)\n  const [viewJob, setViewJob] = useState({})\n\n  const fetchJobs = async() => {\n    setCustomSearch(false)\n    setLoading(true)\n    const req = await firestore\n      .collection('jobs')\n      .orderBy('postedOn', 'desc')\n      .get()\n     const tempJobs = req.docs.map(job => ({...job.data(), id: job.id, postedOn: job.data().postedOn.toDate()}))\n     setJobs(tempJobs)\n     setLoading(false)\n  }\n\n  const fetchJobsCustom = async jobSearch => {\n    setLoading(true)\n    setCustomSearch(true)\n    const req = await firestore\n      .collection('jobs')\n      .orderBy('postedOn', 'desc')\n      .where(\"location\", \"==\" , jobSearch.location)\n      .where(\"type\", \"==\" , jobSearch.type)  \n      .get()\n    const tempJobs = req.docs.map(job => ({...job.data(), id: job.id, postedOn: job.data().postedOn.toDate()}))\n    setJobs(tempJobs)\n    setLoading(false)\n  }\n\n  const postJob = async (jobDetails) => {\n    await firestore.collection('jobs').add({\n      ...jobDetails,\n      postedOn: new Date()\n    })\n    fetchJobs()\n  }\n\n  useEffect(() => {\n    fetchJobs()\n  }, [])\n\n  return <ThemeProvider theme = {theme}>\n    <Header openNewJobModal = {() => setNewJobModal(true)} />\n    <NewJobModal closeModal = {() => setNewJobModal(false)}  newJobModal = {newJobModal} postJob = {postJob} />\n    <ViewJobModal job = {viewJob} closeModal={() => setViewJob({})} />\n    <Box mb={3}>\n      <Grid container justify = \"center\">\n        <Grid item xs = {10}>\n          <SearchBar fetchJobsCustom = {fetchJobsCustom} />\n          {loading ?\n          (<Box display = \"flex\" justifyContent = \"center\"><CircularProgress /></Box>)  : \n          (<>\n            {customSearch && (<Box my = {2} display = \"flex\" justifyContent = \"flex-end\">\n              <Button onClick = {fetchJobs} >\n                <Close size = {20} />\n                Filter\n              </Button>\n            </Box>)}\n            {jobs.map(job => (<JobCard open = {() => setViewJob(job)} key = {job.id} {...job}/>))}\n          </>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  </ThemeProvider>;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}